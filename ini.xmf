parserImport XOCL;

format(stdout,"[Load Init]~%");

xmf.addDropDownMenuItem(Seq{"&Build","XMFOperations","Compiler","CompilerOp
tions","Compile"},
  @Operation() (xmf.homeDir() +
"/Manifest.o").loadBin(false).build(xmf.homeDir()) end);

xmf.addDropDownMenuItem(Seq{"&Build","XMFOperations","Compiler","CompilerOp
tions","Source","SourceOptions","Save"},
  @Operation() Compiler::saveSource := true end);

xmf.addDropDownMenuItem(Seq{"&Build","XMFOperations","Compiler","CompilerOp
tions","Source","SourceOptions","Omit"},
  @Operation() Compiler::saveSource := false end);

xmf.addDropDownMenuItem(Seq{"&Build","XMFOperations","Compiler","CompilerOp
tions","Locals","LocalsOptions","Save"},
  @Operation() Compiler::localNames := true end);

xmf.addDropDownMenuItem(Seq{"&Build","XMFOperations","Compiler","CompilerOp
tions","Locals","LocalsOptions","Omit"},
  @Operation() Compiler::localNames := false end);

xmf.addDropDownMenuItem(Seq{"&Build","XMFOperations","Compiler","CompilerOp
tions","Position","PositionOptions","Save"},
  @Operation() Compiler::sourcePos := true end);

xmf.addDropDownMenuItem(Seq{"&Build","XMFOperations","Compiler","CompilerOp
tions","Position","PositionOptions","Omit"},
  @Operation() Compiler::sourcePos := false end);

xmf.addDropDownMenuItem(Seq{"&Build","XMFOperations","Touch","TouchOptions"
,"Sources"},
  @Operation() (xmf.homeDir() +
"/Manifest.o").loadBin(false).touch(xmf.homeDir(),true) end);

xmf.addDropDownMenuItem(Seq{"&Build","XMFOperations","Touch","TouchOptions"
,"Binaries"},
  @Operation() (xmf.homeDir() +
"/Manifest.o").loadBin(false).touch(xmf.homeDir(),false) end);

xmf.addDropDownMenuItem(Seq{"&Doc","Docs","Applied Metamodelling"},
  @Operation() 
xmf.browse(xmf.docDir()+"/xmf-books/AppliedMetamodelling/book.pdf") end);

xmf.addDropDownMenuItem(Seq{"&Doc","Docs","Superlanguages"},
  @Operation() 
xmf.browse(xmf.docDir()+"/xmf-books/Superlanguages/book.pdf") end);
